devtools::install("ISDStutorials")
devtools::install()
library(ISDStutorials)
learnr::run_tutorial("302intro", package = "ISDStutorials")
git remote add origin https://github.com/NUstat/ISDStutorials.git
git remote -v
usethis::use_github_action("check-standard")
?use_github_action
usethis::use_github_action("pkgdown")
#library(googlesheets4)
system.file("gradethis")
find.package("gradethis")
try(find.package("gradethis"), silent = TRUE)
system.file("gradethis")
p1 <- try(find.package("gradethis"), silent = TRUE)
attr(p1,"class")
p1 <- try(find.package("gradethis"), silent = TRUE)
p1 <- try(find.package("grade"), silent = TRUE)
?try
p1 <- try(find.package("grade"))
try(find.package("grade"), silent = TRUE)
p1 <- try(find.package("grade"), silent = TRUE)
p1
p1$attr(,"class")
p1[attr(,"class")]
class(p1)
p1 <- try(find.package("gradethis"), silent = TRUE)
if(class(p1) == "try-error"){
remotes::install_github("rstudio/gradethis")
}
p2 <- try(find.package("submitr"), silent = TRUE)
if(class(p2) == "try-error"){
devtools::install_github("dtkaplan/submitr")
}
p3 <- try(find.package("tidyverse/googlesheets4"), silent = TRUE)
if(class(p3) == "try-error"){
remotes::install_github("tidyverse/googlesheets4")
}
p3 <- try(find.package("googlesheets4"), silent = TRUE)
if(class(p3) == "try-error"){
remotes::install_github("tidyverse/googlesheets4")
}
devtools::install.packages("NUstat/ISDStutorials")
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
devtools::install_github("NUstat/ISDStutorials")
install.packages(c("crayon", "fansi", "knitr", "leaflet", "lhs", "lmtest", "plyr", "processx", "RSQLite", "sass"))
cred <- "data/credentials.csv"
vfun <- make_basic_validator(cred, "302")
?basket
??basket
??etude
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
install.packages(c("BiocManager", "blob", "bookdown", "broom", "car", "checkmate", "cli", "dials", "dplyr", "DT", "extrafont", "formatR", "furrr", "future", "future.apply", "gert", "globals", "haven", "Hmisc", "httr", "igraph", "insight", "knitr", "labelled", "Lahman", "leafem", "lme4", "magrittr", "maptools", "mapview", "matrixStats", "nloptr", "norm", "pagedown", "parallelly", "polynom", "ps", "quantmod", "quantreg", "RcppArmadillo", "RcppEigen", "readxl", "rgdal", "rmarkdown", "rprojroot", "RSQLite", "shinyWidgets", "sjlabelled", "skimr", "sp", "testthat", "tibble", "tidycensus", "tidygraph", "tinytex", "tzdb", "uuid", "vctrs", "webshot", "xfun", "zoo"))
install.packages(c("BiocManager", "blob", "bookdown", "broom", "car", "checkmate", "cli", "dials", "dplyr", "DT", "extrafont", "formatR", "furrr", "future", "future.apply", "gert", "globals", "haven", "Hmisc", "httr", "igraph", "insight", "knitr", "labelled", "Lahman", "leafem", "lme4", "magrittr", "maptools", "mapview", "matrixStats", "nloptr", "norm", "pagedown", "parallelly", "polynom", "ps", "quantmod", "quantreg", "RcppArmadillo", "RcppEigen", "readxl", "rgdal", "rmarkdown", "rprojroot", "RSQLite", "shinyWidgets", "sjlabelled", "skimr", "sp", "testthat", "tibble", "tidycensus", "tidygraph", "tinytex", "tzdb", "uuid", "vctrs", "webshot", "xfun", "zoo"))
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
devtools::install_github("NUstat/ISDStutorials")
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
devtools::install_github("NUstat/ISDStutorials")
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
utils::packageVersion("ISDStutorials")
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
> devtools::install_github("NUstat/ISDStutorials")
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
# button can be placed anywhere in the tutorial
actionButton("print2pdf", "Print page", style="opacity: .7; color: #000;")
# button can be placed anywhere in the tutorial
actionButton("printButton", "Print page", style="opacity: .7; color: #000;", class = "topicsFooter")
htmltools::htmlDependency(
name = "tutorial",
version = utils::packageVersion("ISDStutorials"),
src = html_dependency_src("lib", "tutorial"),
script = "print-format.js",
stylesheet = "print-format.css",
all_files = TRUE
)
htmltools::htmlDependency(
name = "tutorial",
version = utils::packageVersion("ISDStutorials"),
#src = html_dependency_src("lib", "tutorial"),
script = "print-format.js",
stylesheet = "print-format.css",
all_files = TRUE
)
htmltools::htmlDependency(
name = "tutorial",
version = utils::packageVersion("ISDStutorials"),
#src = html_dependency_src("lib", "tutorial"),
script = list(src = "print-format.js"),
stylesheet = list(src = "print-format.css"),
all_files = TRUE
)
htmltools::htmlDependency(
#name = "tutorial",
#version = utils::packageVersion("ISDStutorials"),
#src = html_dependency_src("lib", "tutorial"),
script = list(src = "print-format.js"),
stylesheet = list(src = "print-format.css"),
all_files = TRUE
)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
htmltools::htmlDependency(
name = "tutorial",
version = utils::packageVersion("ISDStutorials"),
src = html_dependency_src("lib", "tutorial"),
script = list(src = "print-format.js"),
stylesheet = list(src = "print-format.css"),
all_files = TRUE
)
#' Tutorial HTML dependency
#'
#' @details HTML dependency for core tutorial JS and CSS. This should be included as a
#' dependency for custom tutorial formats that wish to ensure that that
#' tutorial.js and tutorial.css are loaded prior their own scripts and stylesheets.
#'
#' @export
ISDS_html_dependency <- function() {
htmltools::htmlDependency(
name = "tutorial",
version = utils::packageVersion("ISDStutorials"),
src = html_dependency_src("lib", "tutorial"),
script = list(src = "print-format.js"),
stylesheet = list(src = "print-format.css"),
all_files = TRUE
)
}
View(ISDS_html_dependency)
ISDS_html_dependency()
#' Tutorial HTML dependency
#'
#' @details HTML dependency for core tutorial JS and CSS. This should be included as a
#' dependency for custom tutorial formats that wish to ensure that that
#' tutorial.js and tutorial.css are loaded prior their own scripts and stylesheets.
#'
#' @export
ISDS_html_dependency <- function() {
htmltools::htmlDependency(
name = "tutorial",
version = utils::packageVersion("ISDStutorials"),
src = htmltools::html_dependency_src("lib", "tutorial"),
script = list(src = "print-format.js"),
stylesheet = list(src = "print-format.css"),
all_files = TRUE
)
}
ISDS_html_dependency()
#' Tutorial HTML dependency
#'
#' @details HTML dependency for core tutorial JS and CSS. This should be included as a
#' dependency for custom tutorial formats that wish to ensure that that
#' tutorial.js and tutorial.css are loaded prior their own scripts and stylesheets.
#'
#' @export
ISDS_html_dependency <- function() {
htmltools::htmlDependency(
name = "tutorial",
version = utils::packageVersion("ISDStutorials"),
src = learnr::html_dependency_src("lib", "tutorial"),
script = list(src = "print-format.js"),
stylesheet = list(src = "print-format.css"),
all_files = TRUE
)
}
ISDS_html_dependency()
#' Tutorial HTML dependency
#'
#' @details HTML dependency for core tutorial JS and CSS. This should be included as a
#' dependency for custom tutorial formats that wish to ensure that that
#' tutorial.js and tutorial.css are loaded prior their own scripts and stylesheets.
#'
#' @export
ISDS_html_dependency <- function() {
htmltools::htmlDependency(
name = "tutorial",
version = utils::packageVersion("ISDStutorials"),
src = learnr:::html_dependency_src("lib", "tutorial"),
script = list(src = "print-format.js"),
stylesheet = list(src = "print-format.css"),
all_files = TRUE
)
}
ISDS_html_dependency()
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
detach("package:ISDStutorials", unload = TRUE)
devtools::install_github("NUstat/ISDStutorials")
library(ISDStutorials)
devtools::document()
devtools::document()
shiny::runApp('~/Stat302/NEW_LABS/solutions/solutions_L09/StateMap')
# load packages
library(tidyverse)
library(skimr)
library(moderndive)
library(cowplot) # added to display plots nicely
library(TeachingDemos)
# load population data
ride_data <- read_rds("data/ride_data.rds")
library(learnr)
library(shiny)
devtools::document()
devtools::document()
shiny::runApp('~/Stat302/NEW_LABS/M2_midterm')
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?`:::`
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::documents()
devtools::document()
devtools::document()
theme = rstudio
theme <- "rstudio"
identical(theme, "rstudio")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(gradethis)
install.packages("gradethis")
remotes::install_github("NUstat/ISDStutorials", dependencies = TRUE)
devtools::document()
remotes::install_github("NUstat/ISDStutorials", dependencies = TRUE)
remotes::install_github("NUstat/ISDStutorials", dependencies = TRUE)
learnr::run_tutorial("tutorial_ch02_part1", package = "ISDStutorials")
source("print_option.R")
source("R/print_option.R")
remotes::install_github("NUstat/ISDStutorials", dependencies = TRUE)
library(ISDStutorials)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
shiny::runApp('~/Stat202')
